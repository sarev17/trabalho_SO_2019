/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simulador.de.processos;

import java.awt.List;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author andre
 */
public class TelaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form TelaPrincipal
     */
    private InserirProcesso jInserir;

    public TelaPrincipal() {
        initComponents();
        this.jInserir = new InserirProcesso(this, rootPaneCheckingEnabled);
    }

    ArrayList<Integer> maiorprioridade = new ArrayList();
    private String nome;
    private int cicloCPU = 0;
    private int PID;
    private int Tchegada;
    private int Ciclos;
    private int Prioridade;
    private int tempo = 0; //valor dos ciclos

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jPanel1 = new javax.swing.JPanel();
        TPAdicionar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        TPJBEscalo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        TPProcessadores = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSliderciclos = new javax.swing.JSlider();
        jLabelciclos = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        brterminar = new javax.swing.JButton();
        btINIciar = new javax.swing.JButton();
        btsalvar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabelvalorciclos = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableprocessos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableprontos = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableterminado = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableexecutando = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        TPAdicionar.setText("Adicionar");
        TPAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TPAdicionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TPAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TPAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 200, 70));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        TPJBEscalo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TPJBEscalo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FIFO", "SJF", "Round Robin" }));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Política de Escalonamento");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TPJBEscalo, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TPJBEscalo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, 200, 70));

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Nº de Processadores");

        TPProcessadores.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        TPProcessadores.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TPProcessadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TPProcessadoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(TPProcessadores, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TPProcessadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 20, 200, 70));

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Ciclos da CPU");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jLabelciclos, org.jdesktop.beansbinding.ELProperty.create("${horizontalAlignment}"), jSliderciclos, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        jSliderciclos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSliderciclosStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSliderciclos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(28, 28, 28)
                        .addComponent(jLabelciclos)
                        .addGap(3, 3, 3)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabelciclos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSliderciclos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 20, 200, 70));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Prontos:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Processos:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Executando:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, -1, -1));

        brterminar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        brterminar.setText("Terminar");
        brterminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brterminarActionPerformed(evt);
            }
        });
        getContentPane().add(brterminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 590, 104, 46));

        btINIciar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btINIciar.setText("Iniciar");
        btINIciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btINIciarActionPerformed(evt);
            }
        });
        getContentPane().add(btINIciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 590, 104, 46));

        btsalvar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btsalvar.setText("Pausar");
        btsalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsalvarActionPerformed(evt);
            }
        });
        getContentPane().add(btsalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 590, 104, 46));

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Ciclos");

        jLabelvalorciclos.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabelvalorciclos.setText("002");
        jLabelvalorciclos.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jLabelvalorciclosPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabelvalorciclos)
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelvalorciclos)
                .addGap(0, 4, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 580, 160, 60));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Terminados");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 350, -1, -1));

        jTableprocessos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableprocessos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "Nome", "Prioriade", "T.Chegg.", "Ciclos", "T.Saida", "Ciclo Rest"
            }
        ));
        jScrollPane1.setViewportView(jTableprocessos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, 186));

        jTableprontos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableprontos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "PID", "Nome", "Prioriade", "T.Chegg.", "Ciclos", "T.Saida", "Ciclo Rest"
            }
        ));
        jScrollPane2.setViewportView(jTableprontos);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 140, -1, 186));

        jTableterminado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableterminado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "Nome", "Prioriade", "T.Chegg.", "Ciclos", "T.Saida", "Ciclo Rest"
            }
        ));
        jScrollPane4.setViewportView(jTableterminado);

        getContentPane().add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 380, -1, 186));

        jTableexecutando.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableexecutando.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PID", "Nome", "Prioriade", "T.Chegg.", "Ciclos", "T.Saida", "Ciclo Rest"
            }
        ));
        jScrollPane3.setViewportView(jTableexecutando);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, -1, 186));

        jMenuBar1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jMenu1.setText("Opções");
        jMenu1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jMenu3.setText("Gravar Fila de Processos");
        jMenu1.add(jMenu3);

        jMenu4.setText("Abrir fila de processos");
        jMenu1.add(jMenu4);

        jMenu5.setText("Processador");
        jMenu1.add(jMenu5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("SO");
        jMenu2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void inserirProcessoTabela(int PID, String nome, int prioridade, int tempoChegada, int ciclos, int tsaida, int cRestante) {

        DefaultTableModel novoProcesso = (DefaultTableModel) jTableprocessos.getModel();

        Object[] dados = {PID, nome, prioridade, tempoChegada, ciclos, tsaida, cRestante};
        novoProcesso.addRow(dados);

    }


    private void brterminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brterminarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_brterminarActionPerformed

    private void btINIciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btINIciarActionPerformed
        // TODO add your handling code here:

        //maiorprioridade.clear();//limpando a vetor com as prioriades              

        String esc = TPJBEscalo.getSelectedItem().toString();
        
        switch(esc){
            case "FIFO":
                FIFO();
                break;
            case "SJF":
                SJF();
                break;
                
    }
        
       

    }//GEN-LAST:event_btINIciarActionPerformed

    private void btsalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsalvarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btsalvarActionPerformed

    private void TPAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TPAdicionarActionPerformed
        // TODO add your handling code here:

        this.jInserir.setVisible(true);

        DefaultTableModel novoProcesso = (DefaultTableModel) jTableprocessos.getModel();

        if (jInserir.getJnome() != null) {

            Object[] dados = {PID = jInserir.getjPID(),
                nome = jInserir.getJnome(),
                Prioridade = jInserir.getjPrioridade(),
                Tchegada = (int) tempo,
                Ciclos = jInserir.getjCiclos(),
                0, Ciclos};
            novoProcesso.addRow(dados);
        }

    }//GEN-LAST:event_TPAdicionarActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        clock();

    }//GEN-LAST:event_formWindowOpened

    private void TPProcessadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TPProcessadoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TPProcessadoresActionPerformed

    private void jSliderciclosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSliderciclosStateChanged
        // TODO add your handling code here:

        try {
            jLabelciclos.setText(String.valueOf(jSliderciclos.getValue()));

            cicloCPU = Integer.parseInt(jLabelciclos.getText());

        } catch (Exception e) {

        }
    }//GEN-LAST:event_jSliderciclosStateChanged

    private void jLabelvalorciclosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jLabelvalorciclosPropertyChange
        // TODO add your handling code here:

        if (jTableexecutando.getRowCount() > 0) {
            if (jTableexecutando.getValueAt(0, 0) != null) {
                int ciclorest = Integer.parseInt(jTableexecutando.getValueAt(0, 6).toString());
                if (ciclorest > 0) {
                    jTableexecutando.setValueAt(ciclorest - cicloCPU, 0, 6);
                } else {

                    DefaultTableModel excluirLinha = (DefaultTableModel) jTableexecutando.getModel();
                    DefaultTableModel addTerminado = (DefaultTableModel) jTableterminado.getModel();
                    Object[] exec = {excluirLinha.getValueAt(0, 0),
                        excluirLinha.getValueAt(0, 1),
                        excluirLinha.getValueAt(0, 2),
                        excluirLinha.getValueAt(0, 3),
                        excluirLinha.getValueAt(0, 4),
                        excluirLinha.getValueAt(0, 5),
                        excluirLinha.getValueAt(0, 6)};
                    addTerminado.addRow(exec);

                    //int cheg = Integer.parseInt(jTableterminado.getValueAt(0, 3).toString());
                    //jTableterminado.setValueAt(tempo - cheg, 0, 5);
                    excluirLinha.removeRow(0);

                    if (jTableprontos.getRowCount() > 0) {

                        DefaultTableModel excluirProntp = (DefaultTableModel) jTableprontos.getModel();
                        DefaultTableModel addExecutando = (DefaultTableModel) jTableexecutando.getModel();
                        Object[] exec2 = {excluirProntp.getValueAt(0, 0),
                            excluirProntp.getValueAt(0, 1),
                            excluirProntp.getValueAt(0, 2),
                            excluirProntp.getValueAt(0, 3),
                            excluirProntp.getValueAt(0, 4),
                            excluirProntp.getValueAt(0, 5),
                            excluirProntp.getValueAt(0, 6)};
                        addExecutando.addRow(exec2);
                        excluirProntp.removeRow(0);

                    }

                }
            }
        }

    }//GEN-LAST:event_jLabelvalorciclosPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);

            }
        });
    }

    public void clock() {
        new Thread() {
            @Override
            public void run() {
                while (true) {

                    jLabelvalorciclos.setText(tempo + "");
                    tempo++;
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(TelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

        }.start();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton TPAdicionar;
    private javax.swing.JComboBox<String> TPJBEscalo;
    private javax.swing.JFormattedTextField TPProcessadores;
    private javax.swing.JButton brterminar;
    private javax.swing.JButton btINIciar;
    private javax.swing.JButton btsalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelciclos;
    private javax.swing.JLabel jLabelvalorciclos;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSlider jSliderciclos;
    private javax.swing.JTable jTableexecutando;
    private javax.swing.JTable jTableprocessos;
    private javax.swing.JTable jTableprontos;
    private javax.swing.JTable jTableterminado;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public void EnviarParaExecutando() {

    }

    public javax.swing.JFormattedTextField getTPProcessadores() {
        return TPProcessadores;
    }

    public void setTPProcessadores(javax.swing.JFormattedTextField TPProcessadores) {
        this.TPProcessadores = TPProcessadores;
    }
    
    
    public void FIFO(){
         cicloCPU = Integer.parseInt(jLabelciclos.getText());
        //JOptionPane.showMessageDialog(null, cicloCPU);

        if (TPProcessadores.getValue() != null) {
            //Enviando processos para Prontos
            for (int i = 0; i < jTableprocessos.getRowCount(); i++) {
                for (int j = 0; j < jTableprocessos.getColumnCount(); j++) {

                    jTableprontos.setValueAt(jTableprocessos.getValueAt(i, j), i, j);
                    
                }
                jTableprontos.setValueAt(tempo, i, 3);
            }

           
            DefaultTableModel excluirLinha = (DefaultTableModel) jTableprontos.getModel();
            DefaultTableModel addExecutando = (DefaultTableModel) jTableexecutando.getModel();

            int processadores = Integer.parseInt(TPProcessadores.getValue().toString());
            while (processadores > 0) {
                int t = 0;
          
                Object[] exec = {excluirLinha.getValueAt(t, 0),
                    excluirLinha.getValueAt(t, 1),
                    excluirLinha.getValueAt(t, 2),
                    excluirLinha.getValueAt(t, 3),
                    excluirLinha.getValueAt(t, 4),
                    excluirLinha.getValueAt(t, 5),
                    excluirLinha.getValueAt(t, 6)};
                addExecutando.addRow(exec);
                excluirLinha.removeRow(t);
              
                processadores--;
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Insira a quantidade de processadores");
            TPProcessadores.requestFocus();
        }       

    }
    
    public void SJF(){
    
         cicloCPU = Integer.parseInt(jLabelciclos.getText());
        //JOptionPane.showMessageDialog(null, cicloCPU);

        if (TPProcessadores.getValue() != null) {
            //Enviando processos para Prontos
            for (int i = 0; i < jTableprocessos.getRowCount(); i++) {
                for (int j = 0; j < jTableprocessos.getColumnCount(); j++) {

                    jTableprontos.setValueAt(jTableprocessos.getValueAt(i, j), i, j);
                    if (j == 4) {
                       maiorprioridade.add(Integer.parseInt(jTableprocessos.getValueAt(i, j).toString()));
                    }
                }
                jTableprontos.setValueAt(tempo, i, 3);
            }

             Collections.sort(maiorprioridade);
            //Collections.reverse(maiorprioridade);
            //JOptionPane.showMessageDialog(null, maiorprioridade);
            //Ordenando a tabela de Prontos por prioriade;
            TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTableprontos.getModel());
            jTableprontos.setRowSorter(sorter);
            ArrayList<RowSorter.SortKey> sortKeys = new ArrayList<>();
            int columnIndexToSort = 4;
            sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.DESCENDING));
            sorter.setSortKeys(sortKeys);
            DefaultTableModel excluirLinha = (DefaultTableModel) jTableprontos.getModel();
            DefaultTableModel addExecutando = (DefaultTableModel) jTableexecutando.getModel();

            int processadores = Integer.parseInt(TPProcessadores.getValue().toString());
            while (processadores > 0) {
                int t = 0;
                //obtendo a linha com maior prioridade
                 while (Integer.parseInt(excluirLinha.getValueAt(t, 4).toString()) > maiorprioridade.get(0)) {
                    t++;
                }
               // JOptionPane.showMessageDialog(null, "Tabela =" + Integer.parseInt(excluirLinha.getValueAt(t, 4).toString())
                 //     + " Vetor =" + maiorprioridade.get(0) + "linha = " + t);

                Object[] exec = {excluirLinha.getValueAt(t, 0),
                    excluirLinha.getValueAt(t, 1),
                    excluirLinha.getValueAt(t, 2),
                    excluirLinha.getValueAt(t, 3),
                    excluirLinha.getValueAt(t, 4),
                    excluirLinha.getValueAt(t, 5),
                    excluirLinha.getValueAt(t, 6)};
                addExecutando.addRow(exec);
                excluirLinha.removeRow(t);
                maiorprioridade.remove(0);
                processadores--;
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Insira a quantidade de processadores");
            TPProcessadores.requestFocus();
        }       
        
        
    }
        
    

}
